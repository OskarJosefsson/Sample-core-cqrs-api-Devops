trigger:
- master 
- develop


pool:
    vmImage: 'ubuntu-latest'


variables:
    buildConfiguration: 'Release'
    webAppName: 'app-do22-oskar'
    newSourceBranch: "$(Build.SourceBranchName)"
    isMaster: $[eq(variables['Build.SourceBranch'], 'refs/heads/master')]
    isDevelop: $[eq(variables['Build.SourceBranch'], 'refs/heads/develop')]
stages:
   - stage: Build
     jobs:
     - job: Build_And_Publish
       steps:
       - task: UseDotNet@2
         displayName: 'Use Dotnet'
         inputs:
          version: '6.0.x'

       - task: DotNetCoreCLI@2
         displayName: 'dotnet build'
         inputs:
          command: build 
          projects: 'src/SampleProject.API.sln'
          configuration: $(buildConfiguration)
       - task: Bash@3
         displayName: 'add Tag'
         inputs:
          targetType: 'inline'
          script: echo '##vso[build.addbuildtag]$(newSourceBranch)' 
       - task: DotNetCoreCLI@2
         inputs:
          command: test
          projects: '**/*Tests/*.csproj'
          arguments: '--configuration $(buildConfiguration)'
       - task: DotNetCoreCLI@2
         displayName: 'dotnet publish'
         inputs:
          command: publish
          publishWebProjects: true
          arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/publish'
       - task: PublishBuildArtifacts@1
         inputs:
          PathToPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'drop'
          publishLocation: 'Container'
  
   - stage: Test
     condition: and(succeeded(), eq(variables.isDevelop, 'true'))
     dependsOn: Build
     variables:
      enviroment: test
     jobs:
     - deployment: DeployToTest
       displayName: Deploy app to TestEnv
       environment: 'test'
       strategy:
         runOnce:
           deploy:
             steps:
               - download: current
                 artifact: 'drop'
               - task: AzureRmWebAppDeployment@4
                 inputs:
                   ConnectionType: AzureRM
                   azureSubscription: app-do22-oskar
                   appType: 'webApp'
                   WebAppName: '$(webAppName)-test'
                   packageForLinux: '$(Pipeline.Workspace)/**/*.zip'
                   AppSettings: '-FromAddressEmail po@customer.com'
   - stage: Prod
     condition: and(succeeded(), eq(variables.isMain, 'true'))
     dependsOn: Build
     variables:
      enviroment: prod
     jobs:
     - deployment: DeployToProd
       displayName: Deploy app to ProdEnv
       environment: 'prod'
       strategy:
         runOnce:
           deploy:
             steps:
               - download: current
                 artifact: 'drop'
               - task: AzureRmWebAppDeployment@4
                 inputs:
                   ConnectionType: AzureRM
                   azureSubscription: app-do22-oskar
                   appType: 'webApp'
                   WebAppName: '$(webAppName)-prod'
                   packageForLinux: '$(Pipeline.Workspace)/**/*.zip'
                   AppSettings: '-FromAddressEmail real@customer.com'

       

             
   
        
