trigger:
- master 
- develop


pool:
    vmImage: 'ubuntu-latest'


variables:
    buildConfiguration: 'Release'
    webAppName: 'do22-oskar'
    resourceGroupName: 'rg-devops22-oskar'
    subscriptionId: "2dcd32a4-157f-4eda-80bc-3bb7e643e20d"
    newSourceBranch: "$(Build.SourceBranchName)"
    isMaster: $[eq(variables['Build.SourceBranch'], 'refs/heads/master')]
    isDevelop: $[eq(variables['Build.SourceBranch'], 'refs/heads/develop')]
stages:
   - stage: Build
     jobs:
     - job: Build_And_Publish
       steps:
       - task: UseDotNet@2
         displayName: 'Use Dotnet'
         inputs:
          version: '6.0.x'

       - task: DotNetCoreCLI@2
         displayName: 'dotnet build'
         inputs:
          command: build 
          projects: 'src/SampleProject.API.sln'
          configuration: $(buildConfiguration)
       - task: Bash@3
         displayName: 'add Tag'
         inputs:
          targetType: 'inline'
          script: echo '##vso[build.addbuildtag]$(newSourceBranch)' 
       - task: DotNetCoreCLI@2
         displayName: 'dotnet test'
         inputs:
          command: test
          projects: '**/*Tests/SampleProject.UnitTests.csproj'
          arguments: '--configuration $(buildConfiguration)'

       - task: DotNetCoreCLI@2
         displayName: 'dotnet publish'
         inputs:
          command: publish
          publishWebProjects: true
          arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/publish'
       - task: PublishBuildArtifacts@1
         inputs:
          PathToPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'drop'
          publishLocation: 'Container'
  
   - stage: Test
     dependsOn: Build
     variables:
      enviroment: test
     jobs:
     - deployment: DeployToTest
       displayName: Deploy app to TestEnv
       environment: 'test'
       strategy:
         runOnce:
          deploy:
           steps:
           - checkout: self

           - task: AzureResourceManagerTemplateDeployment@3
             inputs:
               deploymentScope: 'Resource Group'
               azureResourceManagerConnection: 'sc-devops22-oskar'
               subscriptionId: '$(subscriptionId)'
               action: 'Create Or Update Resource Group'
               resourceGroupName: '$(resourceGroupName)'
               location: 'West Europe'
               templateLocation: 'Linked artifact'
               csmFile: 'infra/deploy.bicep'
               deploymentMode: Incremental
               overrideParameters: -appName $(webAppName) -environmentName $(environment)
               deploymentName: 'DeployPipelineTemplate'
               
           - task: AzureWebApp@1
             inputs:
               azureSubscription: sc-devops22-oskar
               appType: 'webApp'
               appName: 'app-$(webAppName)-test'
               package: '$(Pipeline.Workspace)/**/*.zip'
               deploymentMethod: 'zipDeploy'
               AppSettings: '-FromAddressEmail real@customer.com'              
               
   - stage: Prod
     condition: and(succeeded(), eq(variables.isMaster, 'true'))
     dependsOn: Build
     variables:
      environment: prod
     jobs:
     - deployment: DeployToProd
       displayName: Deploy app to ProdEnv
       environment: 'prod'
       strategy:
         runOnce:
           deploy:
             steps:
             - checkout: self
             - task: AzureResourceManagerTemplateDeployment@3
               inputs:
                 deploymentScope: 'Resource Group'
                 azureResourceManagerConnection: 'sc-devops22-oskar'
                 subscriptionId: '$(subscriptionId)'
                 action: 'Create Or Update Resource Group'
                 resourceGroupName: '$(resourceGroupName)'
                 location: 'West Europe'
                 templateLocation: 'Linked artifact'
                 csmFile: 'infra/deploy.bicep'
                 deploymentMode: Incremental
                 overrideParameters: -appName $(webAppName) -environmentName $(environment) 
                 deploymentName: 'DeployPipelineTemplate'             

             - task: AzureRmWebAppDeployment@4
               inputs:
                   ConnectionType: AzureRM
                   azureSubscription: sc-devops22-oskar
                   appType: 'webApp'
                   WebAppName: 'app-$(webAppName)-prod'
                   packageForLinux: '$(Pipeline.Workspace)/**/*.zip'
                   AppSettings: '-FromAddressEmail real@customer.com'

       

             
   
        
